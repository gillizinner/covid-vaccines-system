@model CovidVaccinationSystem.Models.memberBE

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit Member</h2>
<div style="color:red">
    @ViewBag.Error
</div>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.firstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.lastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.imgUrl, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.imgUrl, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.imgUrl, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.phoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.phoneNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.phoneNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.cellphoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.cellphoneNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.cellphoneNumber, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="col-md-10">
                <label>City:</label>
                @Html.EditorFor(model => model.address.city, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.address.city, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-10">
                <label>Street:</label>
                @Html.EditorFor(model => model.address.street, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.address.street, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-10">
                <label>Building:</label>
                @Html.EditorFor(model => model.address.numOfBuilding, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.address.numOfBuilding, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.dateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.dateOfBirth, new
            {
                htmlAttributes = new
       {
           @class = "form-control datepicker",
           type = "date"
       }
            })

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.dateOfPositiveResult, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.dateOfPositiveResult, new
            {
                htmlAttributes = new
       {
           @class = "form-control datepicker",
           type = "date"
       }
            })

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.dateOfRecovery, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.dateOfRecovery, new
            {
                htmlAttributes = new
       {
           @class = "form-control datepicker",
           type = "date"
       }
            })

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.vaccinesArray, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @for (int i = 0; i < 4; i++)
            {
                <label>Date of Vaccine @(i+1)</label>
                @Html.EditorFor(model => model.vaccinesArray[i].dateOfVaccine, new
           {
               htmlAttributes = new
               { @class = "form-control" }
           })
                <label>Maker of Vaccine @(i+1)</label>
                @Html.EditorFor(model => model.vaccinesArray[i].makerOfVaccine, new
                {
                    htmlAttributes = new
                    { @class = "form-control" }
                })
            }


        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
